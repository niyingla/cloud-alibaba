spring:
  datasource:
    url: jdbc:mysql://localhost:3306/content_center
    hikari:
      username: root
      password: root123
      # >= 6.x: com.mysql.cj.jdbc.Driver
      # <= 5.x: com.mysql.jdbc.Driver
      driver-class-name: com.mysql.cj.jdbc.Driver

  cloud:
    nacos:
      discovery:
        # 指定nacos server的地址
        server-addr: localhost:8848
        #可以设置上之后通过自己的负载均衡算法可以实现优先同集群调用，减少网络开销
        cluster-name: BJ
        # NameSpace可以用来进行资源的隔离
        # namespace: 56116141-d837-4d15-8842-94e153bb6cfb

        # 指定元数据
        metadata:
          haha: sskk

    sentinel:
      filter:
        # 打开/关闭掉对Spring MVC端点的保护
        enabled: true
      transport:
        # 指定sentinel 控制台的地址
          dashboard: localhost:8080

    stream:
      rocketmq:
        #指定服务地址
        binder:
          name-server: 127.0.0.1:9876
        bindings:
          #使用事务消息 配合 @RocketMQTransactionListener(txProducerGroup = "tx-add-bonus-group")
          output:
            producer:
              # 开启事务消息
              transactional: true
              # rocketmq一定要设置group（随便写） 其他的mq可留空
              group: tx-add-bonus-group
      bindings:
        output:
          # 用来指定topic
          destination: add-bonus
  application:
    # 服务名称尽量用-，不要用_，不要用特殊字符
    name: content-center

  main:
    allow-bean-definition-overriding: true
server:
  port: 8010
#集群 搭建手记 https://www.imooc.com/article/288153
#指定服务负载均衡 和@RibbonClient(name = "user-center",configuration = RibbonConfiguration.class)类似
#user-center:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
ribbon:
  eager-load:
    enabled: true
    clients: user-center
logging:
  level:
    com.itmuch.contentcenter.feignclient.UserCenterFeignClient: debug
    com.alibaba.nacos: error
feign:
  sentinel:

    # 为feign整合sentinel
    enabled: true
  client:
    config:
      # 全局配置
      default:
        loggerLevel: full
        requestInterceptors:
          - com.itmuch.contentcenter.feignclient.interceptor.TokenRelayRequestIntecepor
  # 增加feign配置 优化请求 这里是httpclient 也可以配置 okhttp
  httpclient:
    # 让feign使用apache httpclient做请求；而不是默认的urlconnection
    enabled: true
    # feign的最大连接数
    max-connections: 200
    # feign单个路径的最大连接数
    max-connections-per-route: 50
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
resttemplate:
  sentinel:
    # 设置成false，表示关闭@SentinelRestTemplate注解
    enabled: true

jwt:
  secret: aaaaaaabbbbbbcccccdddddaaaaaaabbbbbbcccccdddddaaaaaaabbbbbbcccccddddd
  # 有效期，单位秒，默认2周
  expire-time-in-second: 1209600
